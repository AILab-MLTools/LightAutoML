[tool.poetry]
name = "LightAutoML"
version = "0.3.7.4"
description = "Fast and customizable framework for automatic ML model creation (AutoML)"
authors = [
    "Alexander Ryzhkov <alexmryzhkov@gmail.com>",
    "Anton Vakhrushev <btbpanda@gmail.com>",
    "Dmitrii Simakov <dmitryevsimakov@gmail.com>",
    "Rinchin Damdinov <damdinovr@gmail.com>",
    "Alexander Kirilin <adkirilin@gmail.com>",
    "Vasilii Bunakov <va.bunakov@gmail.com>",
]
readme = "README.md"
license = "Apache-2.0"
homepage = "https://lightautoml.readthedocs.io/en/latest/"
repository = "https://github.com/AILab-MLTools/LightAutoML"
classifiers = [
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed"
]


[tool.poetry.dependencies]
python = ">=3.6.1, <3.11"

poetry-core = [
    {version = ">=1.0.0", python = "<3.7"},
    {version = "^1.0.0", python = "^3.7"}
]
pandas = [
  {version = "<=1.1.5", python = ">=3.6.1, <3.7.1"},
  {version = "<=1.3.5", python = ">=3.7.1, <3.8"},
  {version = "<=1.4.3", python = ">=3.8"}
]
numpy = "<1.24.0"
scikit-learn = ">=0.22, <=0.24.2"
lightgbm = ">=2.3, <=3.2.1"
catboost = ">=0.26.1"
optuna = "*"
torch = [
    {platform = "win32", python = "3.6.1", version = "1.7.0"},
    {version = "*"}
]
dataclasses = {version = "0.6", python = "<3.7"}
holidays = "*"
networkx = "*"
cmaes = "*"
pyyaml = "*"
tqdm = "*"
joblib = "*"
importlib-metadata = {version = ">=1.0", python = "<3.8"}

autowoe = ">=1.2"

jinja2 = "*"
json2html = "*"
seaborn = "*"

# NLP
gensim = {version = ">=4", optional = true}
nltk = {version = "*", optional = true}
transformers = {version = ">=4", optional = true}

# CV
albumentations = {version = "<=1.0.3", optional = true}
efficientnet-pytorch = {version = "*", optional = true}
opencv-python = {version = "<=4.5.2.52", optional = true}
PyWavelets = {version = "*", optional = true}
torchvision = [
    {platform = "win32", python = "3.6.1", version = "0.8.0", optional = true},
    {platform = "*", version = "*", optional = true}
]

# AFG
featuretools = {version = ">=1.11.1", python = ">=3.7", optional = true}

# Report (pdf)
weasyprint = {version = "52.5", optional = true}
cffi = {version = "1.14.5", optional = true}

traitlets = {version = ">=5", python = ">=3.8"} # TODO: ???

[tool.poetry.extras]
cv = [
    "albumentations",
    "efficientnet-pytorch",
    "opencv-python",
    "PyWavelets",
    "scikit-image",
    "torchvision"
]
nlp = [
    "gensim",
    "nltk",
    "transformers"
]
report = [
    "cffi",
    "weasyprint"
]

afg = [
    "featuretools"
]
all = [
    "albumentations",
    "efficientnet-pytorch",
    "opencv-python",
    "PyWavelets",
    "scikit-image",
    "torchvision",
    "gensim",
    "nltk",
    "transformers",
    "cffi",
    "weasyprint",
    "featuretools"
]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tests/.*/setup.py
)/
'''

[tool.isort]
profile = "black"
force_single_line = true
atomic = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
filter_files = true


[tool.tox]
legacy_tox_ini = """
[tox]
min_version = 4.0
isolated_build = True
envlist =
    py{36, 37, 38, 39, 310},
    lint

[tox:.package]
# note tox will use the same python version as under what tox is installed to package
# so unless this is python 3 you can require a given python version for the packaging
# environment via the basepython key
basepython = python3

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows

[testenv]
package = wheel
deps = pytest # = "6.2.5"
commands = pytest {posargs} -v --basetemp="{envtmpdir}"

[testenv:lint]
deps = pre-commit
skip_install = true
commands = pre-commit run --all-files --show-diff-on-failure

#[testenv:docs]
#skip_install = true
#sphinx = {version = "5.3.0", extras = ["autdoc", "autosummary", "intersphinx", "napoleon", "viewcode"], python = ">=3.8"}
#sphinx-autodoc-typehints = {version = ">=1.19.5", python = ">=3.8"}
#sphinx-rtd-theme = {version = ">=1.1.1", python = ">=3.8"}
#nbsphinx = {version = "0.8.10", python = ">=3.8"}
#nbsphinx-link = {version = "1.3.0", python = ">=3.8"}
#doc8 = "0.10.1"
#rstcheck = "3.3.1"

#[testenv:experiment_tracking]
#clearml = "*"

#ipython = [
#    {version = "<7.0.0", python = "<3.8"},
#    {version = "8.5.0", python = ">=3.8"}
#]
#ipywidgets = "7.7.1"
#pandoc = "2.0.1"
#notebook = "6.4.10"
#jupyter-contrib-nbextensions = "0.5.1"
"""

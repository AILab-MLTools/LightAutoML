[tox]
min_version = 3.28.0
isolated_build = True
envlist =
    py{36, 37, 38, 39, 310},
    lint,
    docs,
    typing,
    jupyter,
    experiment_tracking,
    build

[tox:.package]
# note tox will use the same python version as under what tox is installed to package
# so unless this is python 3 you can require a given python version for the packaging
# environment via the basepython key
basepython = python3

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows

[testenv]
package = wheel
deps =
    .[all]
    pytest >= 6.2.5
commands = pytest {posargs} -v --basetemp="{envtmpdir}"

[testenv:lint]
deps =
    pre-commit == 2.15.0
commands = pre-commit run --all-files

[testenv:docs]
requires = python >= 3.8
changedir = docs
deps =
    poetry >= 1.1.7
    sphinx == 5.3.0 # extras = ["autdoc", "autosummary", "intersphinx", "napoleon", "viewcode"]
    sphinx-autodoc-typehints >=1.19.5
    sphinx-rtd-theme >=1.1.1
    nbsphinx == 0.8.10
    nbsphinx-link == 1.3.0
    doc8 == 0.10.1
    rstcheck == 3.3.1
    pandoc == 2.0.1
commands =
    poetry run make clean html
    poetry run python ../check_docs.py

[testenv:typing]
description = run type checks
deps =
    mypy >= 0.991
commands =
    mypy {posargs:src tests}

[testenv:experiment_tracking]
deps = clearml
commands = sh experiments/run_bench_release.sh {posargs}

[testenv:jupyter]
requires = python >= 3.8
deps =
    ipython >=3.8
    ipywidgets == 7.7.1
    notebook == 6.4.10
    jupyter-contrib-nbextensions == 0.5.1

[testenv:build]
deps =
    poetry >= 1.1.7
commands =
    poetry run python scripts/poetry_fix.py -f
    poetry build

# example:
# tox -e exp -- --dataset_project=Datasets_with_metadata --tags=binary openml
# tox -e exp -- --dataset_project=Datasets_with_metadata --dataset=CIFAR_10_openml --queue=gpu_queue
# tox -e exp -- --dataset_project=Datasets_with_metadata --tags=multiclass --queue=gpu_queue --n_datasets=5 --name=mlp --min_num_obs=100000
# Notion: args [--tags=binary openml] means tag is binary OR tag is openml
[testenv:exp]
requires = python == 3.8
deps =
    clearml
commands =
    python scripts/experiments/run.py {posargs}
